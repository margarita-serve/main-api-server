definitions:
  dto.AccuracyGetResponseDTO:
    properties:
      data:
        description: 응답 결과 data
        type: string
        x-order: "1"
      endTIme:
        description: 검색 끝 시간
        type: string
        x-order: "3"
      message:
        description: 결과 message
        type: string
        x-order: "0"
      startTime:
        description: 검색 시작 시간
        type: string
        x-order: "2"
    type: object
  dto.AccuracySetting:
    properties:
      atRiskValue:
        description: 메트릭의 AtRisk Value
        example: 5
        type: number
        x-order: "2"
      failingValue:
        description: 메트릭의 Failing Value
        example: 10
        type: number
        x-order: "3"
      measurement:
        description: 메트릭 Value 타입
        enum:
        - percent
        - ' value'
        example: percent
        type: string
        x-order: "1"
      metricType:
        description: Accuracy 측정 메트릭 종류
        enum:
        - rmse
        - ' rmsle'
        - ' mae'
        - ' mape'
        - ' mean_tweedie_deviance'
        - ' gamma_deviance'
        - ' tpr'
        - ' accuracy'
        - ' f1'
        - ' ppv'
        - ' fnr'
        - ' fpr'
        example: rmse
        type: string
        x-order: "0"
    type: object
  dto.ActiveDeploymentResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.ArchiveModelPackageResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.CreateDeploymentRequestDTO:
    properties:
      accuracyAnalyze:
        description: 정확도 모니터링 설정, 미 입력시 false
        example: false
        type: boolean
        x-order: "09"
      associationID:
        description: 정확도 측정을 위해 유니크한 요청 ID로 처리할 key명, 요청데이터에 별도 json key항목입력 필요
        example: ""
        type: string
        x-order: "10"
      associationIDInFeature:
        description: 요청 피쳐컬럼에 유니크한 ID값이 포함되어 있는경우 설정
        example: false
        type: boolean
        x-order: "11"
      description:
        description: 배포 설명
        example: deploy best model
        type: string
        x-order: "03"
      featureDriftTracking:
        description: 데이터 드리프트 모니터링 설정, 미 입력시 false
        example: false
        type: boolean
        x-order: "08"
      importance:
        description: 배포중요도   미 입력시 'Moderate'로 설정
        enum:
        - Low
        - ' Moderate'
        - ' High'
        - ' Critical'
        example: Low
        type: string
        x-order: "05"
      modelPackageID:
        description: 모델패키지 ID
        example: cbjmmrvr2g4j4bjpq1a0
        type: string
        x-order: 01 x-nullable=false
      name:
        description: 배포 명
        example: This Is a Test Deploy
        type: string
        x-order: 02 x-nullable=false
      requestCPU:
        description: 요청 CPU 단위)1 = 1vCore = 1000millicpu, 범위)0.001 ~, 미 입력시 1
        example: 0.5
        type: number
        x-order: "06"
      requestMEM:
        description: 요청 MEM 단위)1 = 1G= 1Gi  범위)0.001 ~, 미 입력시 2
        example: 1
        type: number
        x-order: "07"
    required:
    - modelPackageID
    - name
    type: object
  dto.CreateDeploymentResponseDTO:
    properties:
      deploymentID:
        type: string
    type: object
  dto.CreateModelPackageRequestDTO:
    properties:
      description:
        description: 모델패키지 설명
        example: New house price predict
        type: string
        x-order: "02"
      modelDescription:
        description: 모델 설명
        example: Best Accuracy
        type: string
        x-order: "06"
      modelFrameWork:
        description: 모델 런타임 프레임워크
        enum:
        - TensorFlow
        - ' PyTorch'
        - ' SkLearn'
        - ' XGBoost'
        - ' LightGBM'
        example: SkLearn
        type: string
        x-order: "08"
      modelFrameWorkVersion:
        description: 모델 런타임 프레임워크 버전
        example: 1.1.0
        type: string
        x-order: "09"
      modelName:
        description: 모델명
        example: house price Regression Example Model
        type: string
        x-order: "04"
      modelVersion:
        description: 모델 버전
        example: "1.0"
        type: string
        x-order: "05"
      name:
        description: 모델패키지 명
        example: California house price 01
        type: string
        x-order: "01"
      negativeClassLabel:
        description: 이진분류 음성명칭 지정. 모델 예측타입이 'Binary' 일 때 필수
        example: "False"
        type: string
        x-order: "12"
      positiveClassLabel:
        description: 이진분류 양성명칭 지정. 모델 예측타입이 'Binary' 일 때 필수
        example: "True"
        type: string
        x-order: "11"
      predictionTargetName:
        description: 데이터 셋 예측타켓 컬럼 명칭
        example: median_house_value
        type: string
        x-order: "07"
      predictionThreshold:
        description: 이진분류 예측임계값. 모델 예측타입이 'Binary' 일 때 필수
        example: 0.5
        type: number
        x-order: "10"
      projectID:
        description: 프로젝트 ID
        example: cbjmlbnr2g4j4bjpq18g
        type: string
        x-order: "0"
      targetType:
        description: 모델 예측타입 Binary(Binary classification), Regression
        enum:
        - Binary
        - ' Regression'
        example: Regression
        type: string
        x-order: "03"
    required:
    - modelFrameWork
    - name
    - projectID
    - targetType
    type: object
  dto.CreateModelPackageResponseDTO:
    properties:
      modelPackageID:
        type: string
    type: object
  dto.CreateProjectRequestDTO:
    properties:
      description:
        description: 프로젝트 설명
        example: New Project
        type: string
        x-order: "2"
      name:
        description: 프로젝트 명
        example: Project 01
        type: string
        x-order: "1"
    required:
    - name
    type: object
  dto.CreateProjectResponseDTO:
    properties:
      projectID:
        type: string
    type: object
  dto.CreateWebHookRequestDTO:
    properties:
      customHeader:
        example: 'Content-Type: application/json '
        type: string
        x-order: "06"
      messageBody:
        example: '{ "key": "value"}'
        type: string
        x-order: "07"
      method:
        enum:
        - POST
        - GET
        example: POST
        type: string
        x-order: "05"
      name:
        example: pipe-line-trigger
        type: string
        x-order: "03"
      triggerSource:
        enum:
        - Datadrift
        - ' Accuracy'
        example: Datadrift
        type: string
        x-order: "01"
      triggerStatus:
        enum:
        - AtRisk
        - ' Failing'
        example: AtRisk
        type: string
        x-order: "02"
      url:
        example: http://example.com/to/webhook/client
        type: string
        x-order: "04"
    required:
    - method
    - name
    - triggerSource
    - url
    type: object
  dto.CreateWebHookResponseDTO:
    properties:
      webHookID:
        type: string
    type: object
  dto.DataDriftSetting:
    properties:
      driftMetricType:
        description: DataDrift 측정 Metric
        enum:
        - PSI
        example: PSI
        type: string
        x-order: "1"
      driftThreshold:
        description: Drift 값 임계치
        example: 0.15
        type: number
        x-order: "2"
      highImportanceAtRiskCount:
        description: 높은 importance feature 수의 drift at risk 임계치
        example: 0
        type: integer
        x-order: "6"
      highImportanceFailingCount:
        description: 높은 importance feature 수의 drift failing 임계치
        example: 1
        type: integer
        x-order: "7"
      importanceThreshold:
        description: Importance 값 임계치
        example: 0.5
        type: number
        x-order: "3"
      lowImportanceAtRiskCount:
        description: 낮은 importance feature 수의 drift at risk 임계치
        example: 1
        type: integer
        x-order: "4"
      lowImportanceFailingCount:
        description: 낮은 importance feature 수의 drift failing 임계치
        example: 0
        type: integer
        x-order: "5"
      monitorRange:
        description: Monitoring 할 범위
        enum:
        - 2h
        - ' 1d'
        - ' 7d'
        - ' 30d'
        - ' 90d'
        - ' 180d'
        - ' 365d'
        example: 7d
        type: string
        x-order: "0"
    type: object
  dto.DeleteDeploymentResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.DeleteModelPackageResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.DeleteProjectResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.FeatureDriftGetResponseDTO:
    properties:
      data:
        description: Feature Drift 결과 Data
        type: string
        x-order: "1"
      endTIme:
        description: 검색 끝 시간
        type: string
        x-order: "3"
      message:
        description: Message
        type: string
        x-order: "0"
      predictionCount:
        description: 검색 시간 사이의 총 예측 수
        type: integer
        x-order: "4"
      startTIme:
        description: 검색 시작 시간
        type: string
        x-order: "2"
    type: object
  dto.GetDeploymentListResponseDTO:
    properties:
      limit:
        type: integer
      page:
        type: integer
      rows: {}
      sort:
        type: string
      totalPages:
        type: integer
      totalRows:
        type: integer
    type: object
  dto.GetDeploymentResponseDTO:
    properties:
      URI:
        description: End Point 예측 요청 URL
        example: http://example.com/predict
        type: string
        x-order: "08"
      accuracyAnalyze:
        description: 정확도 측정 설정
        example: false
        type: boolean
        x-order: "20"
      accuracyStatus:
        description: 모델 정확도 상태, 사용자가 지정한 정확도 모니터 셋팅에 따라 결정 /30초간격, unknown, warning,
          failing,  정상 = pass
        example: pass
        type: string
        x-order: "18"
      activeStatus:
        description: 배포서비스 활성화 상태
        example: active
        type: string
        x-order: "14"
      associationID:
        description: 요청데이터에서 ID로 처리할 유일한 피쳐컬럼 명
        example: Index
        type: string
        x-order: "21"
      associationIDInFeature:
        example: false
        type: boolean
        x-order: "22"
      changeRequested:
        description: 미사용 컬럼
        type: boolean
      deploymentID:
        description: deployment ID
        example: cbjmmqfr2g4j4bjpq19g
        type: string
        x-order: "01"
      description:
        description: 배포 설명
        example: deploy best model
        type: string
        x-order: "10"
      driftStatus:
        description: 데이터 드리프트 상태, 사용자가 지정한 드리프트 모니터 셋팅에 따라 결정 /30초간격, unknown, warning,
          failing,  정상 = pass
        example: pass
        type: string
        x-order: "17"
      featureDriftTracking:
        description: 데이터 드리프트 설정
        example: false
        type: boolean
        x-order: "19"
      importance:
        description: 배포중요도   미 입력시 'Moderate'로 설정
        enum:
        - Low
        - ' Moderate'
        - ' High'
        - ' Critical'
        example: Low
        type: string
        x-order: "11"
      modelPackageID:
        description: 모델패키지 ID
        example: cbjmmrvr2g4j4bjpq1a0
        type: string
        x-order: "04"
      modelPackageName:
        description: 모델패키지 ID
        example: House Price Best Acuuracy
        type: string
        x-order: "05"
      name:
        description: 배포 명
        example: This Is a Test Deploy
        type: string
        x-order: "09"
      predictionEnvID:
        description: 예측 환경   미 입력시 프로젝트에 설정된 기본 배포환경에 배포
        example: cbjmmqfr2g4j4bjpq19g
        type: string
        x-order: "06"
      predictionEnvName:
        example: Production Inference Cluster
        type: string
        x-order: "07"
      projectID:
        description: 프로젝트 ID
        example: cbjmmqfr2g4j4bjpq19g
        type: string
        x-order: "02"
      projectName:
        description: 프로젝트 명
        example: House Price Project
        type: string
        x-order: "03"
      requestCPU:
        description: 요청 CPU 단위)1 = 1vCore = 1000millicpu, 범위)0.001 ~, 미 입력시 1
        example: 0.5
        type: number
        x-order: "12"
      requestMEM:
        description: 요청 MEM 단위)1 = 1G= 1Gi  범위)0.001 ~, 미 입력시 2
        example: 1
        type: number
        x-order: "13"
      serviceHealthStatus:
        description: 서비스 상태, 24시간 기준 요청이 없을경우 = unknown, 4xx >=1 인경우 = warning, 5xx
          >=1 인경우 = failing, 4xx or 5xx 없을경우 = pass
        example: pass
        type: string
        x-order: "16"
      serviceStatus:
        description: 배포서비스 내부 처리 상태
        example: Ready
        type: string
        x-order: "15"
    required:
    - name
    type: object
  dto.GetGovernanceHistoryResponseDTO:
    properties:
      eventHistory: {}
    type: object
  dto.GetModelHistoryResponseDTO:
    properties:
      modelHistory: {}
    type: object
  dto.GetModelPackageListResponseDTO:
    properties:
      limit:
        type: integer
      page:
        type: integer
      rows: {}
      sort:
        type: string
      totalPages:
        type: integer
      totalRows:
        type: integer
    type: object
  dto.GetModelPackageResponseDTO:
    properties:
      archived:
        description: 아카이브 여부
        example: false
        type: boolean
        x-order: "18"
      description:
        description: 모델패키지 설명
        example: New house price predict
        type: string
        x-order: "04"
      holdoutDatasetName:
        description: 홀드아웃 데이터셋 명
        example: test.csv
        type: string
        x-order: "17"
      modelDescription:
        description: 모델 설명
        example: Best Accuracy
        type: string
        x-order: "08"
      modelFileName:
        description: 모델파일 명
        example: model.pkl
        type: string
        x-order: "15"
      modelFrameWork:
        description: 모델 런타임 프레임워크
        enum:
        - TensorFlow
        - ' PyTorch'
        - ' SkLearn'
        - ' XGBoost'
        - ' LightGBM'
        example: SkLearn
        type: string
        x-order: "10"
      modelFrameWorkVersion:
        description: 모델 런타임 프레임워크 버전
        example: 1.1.0
        type: string
        x-order: "11"
      modelName:
        description: 모델명
        example: house price Regression Example Model
        type: string
        x-order: "06"
      modelPackageID:
        type: string
        x-order: "01"
      modelVersion:
        description: 모델 버전
        example: "1.0"
        type: string
        x-order: "07"
      name:
        description: 모델패키지 명
        example: California house price 01
        type: string
        x-order: "03"
      negativeClassLabel:
        description: 이진분류 음성명칭 지정. 모델 예측타입이 'Binary' 일 때 필수
        example: "False"
        type: string
        x-order: "14"
      positiveClassLabel:
        description: 이진분류 양성명칭 지정. 모델 예측타입이 'Binary' 일 때 필수
        example: "True"
        type: string
        x-order: "13"
      predictionTargetName:
        description: 데이터 셋 예측타켓 컬럼 명칭
        example: median_house_value
        type: string
        x-order: "09"
      predictionThreshold:
        description: 이진분류 예측임계값. 모델 예측타입이 'Binary' 일 때 필수
        example: 0.5
        type: number
        x-order: "12"
      projectID:
        description: 프로젝트 ID
        example: cbjmlbnr2g4j4bjpq18g
        type: string
        x-order: "02"
      targetType:
        description: 모델 예측타입 Binary(Binary classification), Regression
        enum:
        - Binary
        - ' Regression'
        example: Regression
        type: string
        x-order: "05"
      trainingDatasetName:
        description: 훈련 데이터셋 명
        example: training.csv
        type: string
        x-order: "16"
    required:
    - modelFrameWork
    - name
    - projectID
    - targetType
    type: object
  dto.GetProjectListResponseDTO:
    properties:
      limit:
        type: integer
      page:
        type: integer
      rows: {}
      sort:
        type: string
      totalPages:
        type: integer
      totalRows:
        type: integer
    type: object
  dto.GetProjectResponseDTO:
    properties:
      createdAt:
        type: string
      createdBy:
        type: string
      deployments: {}
      description:
        type: string
      modelPackages: {}
      name:
        type: string
      projectID:
        type: string
    type: object
  dto.InActiveDeploymentResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.LoginReqDTO:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.LoginResDTO:
    properties:
      expiredAt:
        type: integer
      token:
        type: string
      tokenType:
        type: string
    type: object
  dto.MonitorGetSettingResponseDTO:
    properties:
      accuracySetting:
        $ref: '#/definitions/dto.AccuracySetting'
      dataDriftSetting:
        $ref: '#/definitions/dto.DataDriftSetting'
    type: object
  dto.MonitorPatchRequestDTO:
    properties:
      accuracySetting:
        $ref: '#/definitions/dto.PatchAccuracySetting'
      dataDriftSetting:
        $ref: '#/definitions/dto.PatchDataDriftSetting'
    type: object
  dto.MonitorPatchResponseDTO:
    properties:
      deploymentID:
        type: string
      message:
        type: string
    type: object
  dto.PatchAccuracySetting:
    properties:
      atRiskValue:
        description: 메트릭의 AtRisk Value
        example: 5
        type: number
        x-order: "2"
      failingValue:
        description: 메트릭의 Failing Value
        example: 10
        type: number
        x-order: "3"
      measurement:
        description: 메트릭 Value 타입
        enum:
        - percent
        - ' value'
        example: percent
        type: string
        x-order: "1"
      metricType:
        description: Accuracy 측정 메트릭 종류
        enum:
        - rmse
        - ' rmsle'
        - ' mae'
        - ' mape'
        - ' mean_tweedie_deviance'
        - ' gamma_deviance'
        - ' tpr'
        - ' accuracy'
        - ' f1'
        - ' ppv'
        - ' fnr'
        - ' fpr'
        example: rmse
        type: string
        x-order: "0"
    type: object
  dto.PatchDataDriftSetting:
    properties:
      driftMetricType:
        description: DataDrift 측정 Metric
        enum:
        - PSI
        example: PSI
        type: string
        x-order: "1"
      driftThreshold:
        description: Drift 값 임계치
        example: 0.15
        type: number
        x-order: "2"
      highImportanceAtRiskCount:
        description: 높은 importance feature 수의 drift at risk 임계치
        example: 0
        type: integer
        x-order: "6"
      highImportanceFailingCount:
        description: 높은 importance feature 수의 drift failing 임계치
        example: 1
        type: integer
        x-order: "7"
      importanceThreshold:
        description: Importance 값 임계치
        example: 0.5
        type: number
        x-order: "3"
      lowImportanceAtRiskCount:
        description: 낮은 importance feature 수의 drift at risk 임계치
        example: 1
        type: integer
        x-order: "4"
      lowImportanceFailingCount:
        description: 낮은 importance feature 수의 drift failing 임계치
        example: 0
        type: integer
        x-order: "5"
      monitorRange:
        description: Monitoring 할 범위
        enum:
        - 2h
        - ' 1d'
        - ' 7d'
        - ' 30d'
        - ' 90d'
        - ' 180d'
        - ' 365d'
        example: 7d
        type: string
        x-order: "0"
    type: object
  dto.RegisterReqDTO:
    properties:
      email:
        type: string
      nickName:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.RegisterResDTO:
    properties:
      email:
        type: string
    type: object
  dto.ReplaceModelRequestDTO:
    properties:
      modelPackageID:
        description: 교체 할 모델패키지 ID
        type: string
      reason:
        description: 교체 이유
        enum:
        - Accurancy
        - ' DataDrift'
        - ' Errors'
        - ' ScheduledRefresh'
        - ' PredictionSpeed'
        - ' Other'
        type: string
    required:
    - modelPackageID
    - reason
    type: object
  dto.ReplaceModelResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.UpdateDeploymentRequestDTO:
    properties:
      accuracyAnalyze:
        description: 정확도 측정 설정
        example: true
        type: boolean
        x-order: "9"
      associationID:
        description: 정확도 측정을 위해 유니크한 요청 ID로 처리할 key명, 요청데이터에 별도 json key항목입력 필요
        example: Index
        type: string
        x-order: "10"
      associationIDInFeature:
        description: 요청 피쳐컬럼에 유니크한 ID값이 포함되어 있는경우 설정
        example: false
        type: boolean
        x-order: "11"
      description:
        description: 베포 설명
        type: string
      featureDriftTracking:
        description: 데이터 드리프트 설정
        example: true
        type: boolean
        x-order: "8"
      importance:
        description: 배포중요도
        enum:
        - Low
        - ' Moderate'
        - ' High'
        - ' Critical'
        example: Low
        type: string
        x-order: "5"
      name:
        description: 베포 명
        type: string
      requestCPU:
        description: 요청 CPU
        example: 1
        type: number
        x-order: "6"
      requestMEM:
        description: 요청 MEM
        example: 2
        type: number
        x-order: "7"
    type: object
  dto.UpdateDeploymentResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.UpdateModelPackageRequestDTO:
    properties:
      description:
        description: 모델패키지 설명
        example: New ModelPacakge
        type: string
        x-order: "2"
      modelDescription:
        description: 모델 설명
        example: Best Accuracy
        type: string
        x-order: "5"
      modelFrameWork:
        description: 모델 프레임워크
        enum:
        - TensorFlow
        - ' PyTorch'
        - ' SkLearn'
        - ' XGBoost'
        - ' LightGBM'
        example: TensorFlow
        type: string
        x-order: "8"
      modelFrameWorkVersion:
        description: 모델 프레임워크 버전
        example: 1.14.0
        type: string
        x-order: "9"
      modelName:
        description: 모델명
        example: Example Model
        type: string
        x-order: "3"
      modelVersion:
        description: 모델 버전
        example: "1.4"
        type: string
        x-order: "4"
      name:
        description: 모델패키지 명
        example: ModelPacakge 01
        type: string
        x-order: "1"
      negativeClassLabel:
        example: "False"
        type: string
        x-order: "12"
      positiveClassLabel:
        description: 이진분류 양성명칭 지정
        example: "True"
        type: string
        x-order: "11"
      predictionTargetName:
        description: 예측 타켓명칭
        example: Target
        type: string
        x-order: "7"
      predictionThreshold:
        description: 이진분류 예측임계값
        example: 0.5
        type: number
        x-order: "10"
      targetType:
        description: 모델 예측타입
        enum:
        - Binary
        - ' Regression'
        example: Binary
        type: string
        x-order: "6"
    type: object
  dto.UpdateModelPackageResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.UpdateProjectRequestDTO:
    properties:
      description:
        description: 프로젝트 설명
        example: this is Edited Project
        type: string
        x-order: "2"
      name:
        description: 프로젝트 명
        example: Edited Project 01
        type: string
        x-order: "1"
    type: object
  dto.UpdateProjectResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.UpdateWebHookRequestDTO:
    properties:
      customHeader:
        example: 'Content-Type: application/json '
        type: string
        x-order: "5"
      messageBody:
        example: '{ "key": "value"}'
        type: string
        x-order: "6"
      method:
        enum:
        - POST
        - GET
        example: POST
        type: string
        x-order: "4"
      name:
        example: pipe-line-trigger
        type: string
        x-order: "2"
      triggerSource:
        enum:
        - Datadrift
        - ' Accuracy'
        example: Datadrift
        type: string
        x-order: "1"
      url:
        example: http://example.com/to/webhook/client
        type: string
        x-order: "3"
    required:
    - method
    - name
    - triggerSource
    - url
    type: object
  dto.UploadActualResponseDTO:
    properties:
      deploymentID:
        type: string
      message:
        type: string
    type: object
  dto.UploadHoldoutDatasetResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.UploadModelResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.UploadTrainingDatasetResponseDTO:
    properties:
      message:
        type: string
    type: object
  response.Response:
    properties:
      message:
        type: string
      result: {}
    type: object
  response.RootResponse:
    properties:
      response:
        $ref: '#/definitions/response.Response'
      serverInfo:
        $ref: '#/definitions/response.ServerInfo'
      status:
        type: string
    type: object
  response.ServerInfo:
    properties:
      serverTime:
        type: string
    type: object
info:
  contact: {}
paths:
  /auths/login:
    post:
      consumes:
      - application/json
      description: 유저 로그인
      parameters:
      - description: login user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.LoginReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.LoginResDTO'
                    type: object
              type: object
      summary: Login user
      tags:
      - Auth
  /auths/register:
    post:
      consumes:
      - application/json
      description: 유저 생성
      parameters:
      - description: register user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.RegisterResDTO'
                    type: object
              type: object
      summary: register user
      tags:
      - Auth
  /deployments:
    get:
      consumes:
      - application/json
      description: 배포 리스트
      parameters:
      - description: queryName
        in: query
        name: name
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.GetDeploymentListResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get Deployment List
      tags:
      - Deployment
    post:
      consumes:
      - application/json
      description: 배포 생성
      parameters:
      - description: Create Deployment
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateDeploymentRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.CreateDeploymentResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Create Deployment
      tags:
      - Deployment
  /deployments/{deploymentID}:
    delete:
      consumes:
      - application/json
      description: 배포 삭제
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.DeleteDeploymentResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Delete Deployment
      tags:
      - Deployment
    get:
      consumes:
      - application/json
      description: 배포 상세조회
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.GetDeploymentResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get Deployment
      tags:
      - Deployment
    patch:
      consumes:
      - application/json
      description: 배포 정보수정
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: Update Deployment Info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateDeploymentRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.UpdateDeploymentResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Edit Deployment
      tags:
      - Deployment
  /deployments/{deploymentID}/active:
    put:
      consumes:
      - application/json
      description: 배포 활성화
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.ActiveDeploymentResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Active Deployment
      tags:
      - Deployment
  /deployments/{deploymentID}/governance-log:
    get:
      consumes:
      - application/json
      description: 배포 거버넌스 로그 조회
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.GetGovernanceHistoryResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get Governance Log
      tags:
      - Deployment
  /deployments/{deploymentID}/inactive:
    put:
      consumes:
      - application/json
      description: 배포 비활성화
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.InActiveDeploymentResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Inactive Deployment
      tags:
      - Deployment
  /deployments/{deploymentID}/model-history:
    get:
      consumes:
      - application/json
      description: 배포 모델 변경이력 조회
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.GetModelHistoryResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get Model History
      tags:
      - Deployment
  /deployments/{deploymentID}/monitor:
    get:
      consumes:
      - application/json
      description: 모니터 설정 조회
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.MonitorGetSettingResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get Monitor Setting
      tags:
      - Monitor
    patch:
      consumes:
      - application/json
      description: 모니터링 설정 변경
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: Patch Monitor
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.MonitorPatchRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.MonitorPatchResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Patch Monitor Setting
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/accuracy:
    get:
      consumes:
      - application/json
      description: 정확도 조회
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: modelHistoryID
        in: query
        name: modelHistoryID
        required: true
        type: string
      - description: timeline or aggregation
        in: query
        name: type
        required: true
        type: string
      - description: example=2022-05-05:01
        in: query
        name: startTime
        required: true
        type: string
      - description: example=2022-08-01:01
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.AccuracyGetResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get Accuracy
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/actual:
    post:
      consumes:
      - application/json
      description: upload Actual file
      parameters:
      - description: actual file upload
        in: formData
        name: file
        required: true
        type: file
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: target column name
        in: query
        name: targetLabel
        required: true
        type: string
      - description: association column id
        in: query
        name: associationColumn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.UploadActualResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Upload Actual file
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/detail:
    get:
      consumes:
      - application/json
      description: 피쳐 드리프트 디테일
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: modelHistoryID
        in: query
        name: modelHistoryID
        required: true
        type: string
      - description: example=2022-05-05:01
        in: query
        name: startTime
        required: true
        type: string
      - description: example=2022-05-05:01
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.FeatureDriftGetResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get Feature Detail
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/drift:
    get:
      consumes:
      - application/json
      description: 데이터 드리프트
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: modelHistoryID
        in: query
        name: modelHistoryID
        required: true
        type: string
      - description: example=2022-05-05:01
        in: query
        name: startTime
        required: true
        type: string
      - description: example=2022-08-01:01
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.FeatureDriftGetResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get Data Drift
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/graph/accuracy:
    get:
      consumes:
      - application/json
      description: 정확도 그래프
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: modelHistoryID
        in: query
        name: modelHistoryID
        required: true
        type: string
      - description: targetMetric
        in: query
        name: targetMetric
        required: true
        type: string
      - description: example=2022-05-05:01 (UTC+0)
        in: query
        name: startTime
        required: true
        type: string
      - description: example=2022-08-01:01 (UTC+0)
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Accuracy Graph
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/graph/cpu:
    get:
      consumes:
      - application/json
      description: cpu 사용량 그래프
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: example=1
        in: query
        name: requestCPU
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get CPU Graph
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/graph/detail:
    get:
      consumes:
      - application/json
      description: 피쳐 디테일 그래프
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: modelHistoryID
        in: query
        name: modelHistoryID
        required: true
        type: string
      - description: example=2022-05-05:01
        in: query
        name: startTime
        required: true
        type: string
      - description: example=2022-08-01:01
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Feature Detail Graph
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/graph/drift:
    get:
      consumes:
      - application/json
      description: 드리프트 그래프
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: modelHistoryID
        in: query
        name: modelHistoryID
        required: true
        type: string
      - description: example=2022-05-05:01
        in: query
        name: startTime
        required: true
        type: string
      - description: example=2022-08-01:01
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Drift Graph
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/graph/memory:
    get:
      consumes:
      - application/json
      description: memory 사용량 그래프
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: example=1
        in: query
        name: requestMemory
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Memory Graph
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/graph/predicted-actual:
    get:
      consumes:
      - application/json
      description: 예측값 변화 그래프
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: modelHistoryID
        in: query
        name: modelHistoryID
        required: true
        type: string
      - description: example=2022-05-05:01 (UTC+0)
        in: query
        name: startTime
        required: true
        type: string
      - description: example=2022-08-01:01 (UTC+0)
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get PredictedActual Graph
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/graph/prediction-over-time:
    get:
      consumes:
      - application/json
      description: 예측값 변화 그래프
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: modelHistoryID
        in: query
        name: modelHistoryID
        required: true
        type: string
      - description: example=2022-05-05:01
        in: query
        name: startTime
        required: true
        type: string
      - description: example=2022-08-01:01
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get PredictionOverTime Graph
      tags:
      - Monitor
  /deployments/{deploymentID}/monitor/graph/service:
    get:
      consumes:
      - application/json
      description: 서비스 상태 그래프
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: modelHistoryID
        in: query
        name: modelHistoryID
        required: true
        type: string
      - description: targetMetric
        in: query
        name: targetMetric
        required: true
        type: string
      - description: example=2022-05-05:01 (UTC+0)
        in: query
        name: startTime
        required: true
        type: string
      - description: example=2022-08-01:01 (UTC+0)
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Service Graph
      tags:
      - Monitor
  /deployments/{deploymentID}/noti/web-hooks:
    get:
      consumes:
      - application/json
      description: WebHook 리스트
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: queryName
        in: query
        name: name
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  $ref: '#/definitions/response.Response'
              type: object
      security:
      - BearerAuth: []
      summary: Get WebHook List
      tags:
      - Noti
    post:
      consumes:
      - application/json
      description: WebHook 생성
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: Create WebHook
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateWebHookRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.CreateWebHookResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Create WebHook
      tags:
      - Noti
  /deployments/{deploymentID}/noti/web-hooks/{webHookID}:
    delete:
      consumes:
      - application/json
      description: WebHook 삭제
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: webHookID
        in: path
        name: webHookID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  $ref: '#/definitions/response.Response'
              type: object
      security:
      - BearerAuth: []
      summary: Delete WebHook
      tags:
      - Noti
    get:
      consumes:
      - application/json
      description: WebHook 상세조회
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: webHookID
        in: path
        name: webHookID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  $ref: '#/definitions/response.Response'
              type: object
      security:
      - BearerAuth: []
      summary: Get WebHook
      tags:
      - Noti
    patch:
      consumes:
      - application/json
      description: WebHook 정보수정
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: webHookID
        in: path
        name: webHookID
        required: true
        type: string
      - description: Update WebHook Info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateWebHookRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  $ref: '#/definitions/response.Response'
              type: object
      security:
      - BearerAuth: []
      summary: Edit WebHook
      tags:
      - Noti
  /deployments/{deploymentID}/noti/web-hooks/test:
    post:
      consumes:
      - application/json
      description: Test WebHook
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: Test WebHook
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateWebHookRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  $ref: '#/definitions/response.Response'
              type: object
      security:
      - BearerAuth: []
      summary: Test WebHook Send
      tags:
      - Noti
  /deployments/{deploymentID}/predict:
    post:
      consumes:
      - application/json
      description: 예측 요청
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: application/json
        in: body
        name: body
        required: true
        schema:
          example: "{\n\"association_id\": [\"abcd1234\"], \n\"instances\": [[-122.12,\t37.68,\t45.0,\t2179.0,\t401.0,\t1159.0,\t399.0,\t3.4839]]\n}"
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RootResponse'
      security:
      - BearerAuth: []
      summary: Send Prediction
      tags:
      - Deployment
  /deployments/{deploymentID}/replace-model:
    patch:
      consumes:
      - application/json
      description: 배포 모델변경
      parameters:
      - description: deploymentID
        in: path
        name: deploymentID
        required: true
        type: string
      - description: Create Deployment
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ReplaceModelRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.ReplaceModelResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Replace Model
      tags:
      - Deployment
  /model-packages:
    get:
      consumes:
      - application/json
      description: 모델 패키지 리스트
      parameters:
      - description: queryName
        in: query
        name: name
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.GetModelPackageListResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get ModelPackage List
      tags:
      - ModelPackage
    post:
      consumes:
      - application/json
      description: 모델 패키지 생성
      parameters:
      - description: Create ModelPackage
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateModelPackageRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.CreateModelPackageResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Create ModelPackage
      tags:
      - ModelPackage
  /model-packages/{modelPackageID}:
    delete:
      consumes:
      - application/json
      description: 모델 패키지 삭제
      parameters:
      - description: modelPackageID
        in: path
        name: modelPackageID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.DeleteModelPackageResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Delete ModelPackage
      tags:
      - ModelPackage
    get:
      consumes:
      - application/json
      description: 모델 패키지 상세조회
      parameters:
      - description: modelPackageID
        in: path
        name: modelPackageID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.GetModelPackageResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get ModelPackage
      tags:
      - ModelPackage
    patch:
      consumes:
      - application/json
      description: 모델 패키지 정보수정
      parameters:
      - description: modelPackageID
        in: path
        name: modelPackageID
        required: true
        type: string
      - description: Update ModelPackage Info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateModelPackageRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.UpdateModelPackageResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Edit ModelPackage
      tags:
      - ModelPackage
  /model-packages/{modelPackageID}/archive:
    put:
      consumes:
      - application/json
      description: 모델 패키지 보관
      parameters:
      - description: modelPackageID
        in: path
        name: modelPackageID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.ArchiveModelPackageResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Archive ModelPackage
      tags:
      - ModelPackage
  /model-packages/{modelPackageID}/download-holdout-dataset:
    get:
      description: 홀드아웃 데이터셋 파일 다운로드
      parameters:
      - description: modelPackageID
        in: path
        name: modelPackageID
        required: true
        type: string
      produces:
      - application/octet-stream
      responses: {}
      security:
      - BearerAuth: []
      summary: Download Holdout Dataset File
      tags:
      - ModelPackage
  /model-packages/{modelPackageID}/download-model:
    get:
      description: 모델 파일 다운로드
      parameters:
      - description: modelPackageID
        in: path
        name: modelPackageID
        required: true
        type: string
      produces:
      - application/octet-stream
      responses: {}
      security:
      - BearerAuth: []
      summary: Download Model File
      tags:
      - ModelPackage
  /model-packages/{modelPackageID}/download-training-dataset:
    get:
      description: 훈련 데이터셋 파일 다운로드
      parameters:
      - description: modelPackageID
        in: path
        name: modelPackageID
        required: true
        type: string
      produces:
      - application/octet-stream
      responses: {}
      security:
      - BearerAuth: []
      summary: Download Training Dataset File
      tags:
      - ModelPackage
  /model-packages/{modelPackageID}/upload-holdout-dataset:
    post:
      consumes:
      - application/json
      description: 훈련 검증 데이터셋 파일 업로드
      parameters:
      - description: modelPackageID
        in: path
        name: modelPackageID
        required: true
        type: string
      - description: file upload
        in: formData
        name: upfile
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.UploadHoldoutDatasetResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Upload Holdout Dataset File
      tags:
      - ModelPackage
  /model-packages/{modelPackageID}/upload-model:
    post:
      consumes:
      - application/json
      description: 모델 파일 업로드
      parameters:
      - description: modelPackageID
        in: path
        name: modelPackageID
        required: true
        type: string
      - description: file upload
        in: formData
        name: upfile
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.UploadModelResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Upload Model File
      tags:
      - ModelPackage
  /model-packages/{modelPackageID}/upload-training-dataset:
    post:
      consumes:
      - application/json
      description: 훈련 데이터셋 파일 업로드
      parameters:
      - description: modelPackageID
        in: path
        name: modelPackageID
        required: true
        type: string
      - description: file upload
        in: formData
        name: upfile
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.UploadTrainingDatasetResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Upload Training Dataset File
      tags:
      - ModelPackage
  /projects:
    get:
      consumes:
      - application/json
      description: 프로젝트 리스트
      parameters:
      - description: queryName
        in: query
        name: name
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.GetProjectListResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get Project List
      tags:
      - Project
    post:
      consumes:
      - application/json
      description: 프로젝트 생성
      parameters:
      - description: Create Project
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProjectRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.CreateProjectResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Create Project
      tags:
      - Project
  /projects/{projectID}:
    delete:
      consumes:
      - application/json
      description: 프로젝트 삭제
      parameters:
      - description: projectID
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.DeleteProjectResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Delete Project
      tags:
      - Project
    get:
      consumes:
      - application/json
      description: 프로젝트 상세조회
      parameters:
      - description: projectID
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.GetProjectResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Get Project
      tags:
      - Project
    patch:
      consumes:
      - application/json
      description: 프로젝트 정보수정
      parameters:
      - description: projectID
        in: path
        name: projectID
        required: true
        type: string
      - description: Update Project Info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProjectRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.RootResponse'
            - properties:
                response:
                  allOf:
                  - $ref: '#/definitions/response.Response'
                  - properties:
                      result:
                        $ref: '#/definitions/dto.UpdateProjectResponseDTO'
                    type: object
              type: object
      security:
      - BearerAuth: []
      summary: Edit Project
      tags:
      - Project
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

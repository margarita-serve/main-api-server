---
# Applications
applications:
  servers:
    restapi:
      options:
        showEngineHeader: true
        displayOpenAPI: true
        hostname: "http://localhost"
        listener:
          port: 8080
        middlewares:
          logger:
            enable: true
        openAPIDefinition: # OpenAPIDefinition
          info:
            title: "KoreServe REST API Server"
            description: "0. Swagger 문서 좌측 상단 Schemes를 HTTPS로 선택  1. Swagger 문서 Auth 섹션에서 register API를 이용해 user를 생성\n2. 등록된 email로 인증메일 전송되며 인증 진행  \n3. Swagger 문서 Auth 섹션 login API 이용 로그인 진행\n4. 응답으로 전달 된 JWT token 을 Swagger API 문서 우측 상단 Authorize 아이콘 클릭 후 입력\n    예) bearer eyJhb......NsNTCCPTeBsOvv6Q4  \n    *bearer는 수기입력 필수\n5. Create Project API 호출 \n6. Create ModelPackage API 호출(생성 된 projectID 입력) 및 Model/TrainingDataset/HoldeOutDataset 업로드 진행(dataset은 csv 포맷으로 feature명칭/Target값 포함 필수)\n7. Create Deployment API 호출(생성 된 modelPackageID 입력)\n8. Deployment Send Prediction API 로 예측확인\n\n*현재 모니터링 파트는 개발 진행중인 상태로 Deployment 생성시 아래 두항목은 false로 설정해야 서빙이 가능합니다\n  featureDriftTracking: false,\n  accuracyAnalyze: false"
            version: 0.1.0
            basePath: "/api/v1"

# Databases
databases:
  identityDB:
    connectionName: "db-identity"
    driver: "mysql" # mysql, postgres, sqlserver, sqlite3
    # mysql
    username: "gorm"
    password: "gorm"
    hostName: "127.0.0.1:3306" # hostname:port OR path
    dbName: "koreserve"
    config: "charset=utf8&parseTime=True&loc=Local"
    maxIdleConns: 10
    maxOpenConns: 10
    logMode: true # shoud be "false" on production
  mainDB:
    connectionName: "db-main"
    driver: "mysql" # mysql, postgres, sqlserver, sqlite3
    # mysql
    username: "gorm"
    password: "gorm"
    hostName: "127.0.0.1:3306" # hostname:port OR path
    dbName: "koreserve"
    config: "charset=utf8&parseTime=True&loc=Local"
    maxIdleConns: 10
    maxOpenConns: 10
    logMode: true # shoud be "false" on production
  # logDB:
  #   connectionName: "db-log"
  #   driver: "mysql" # mysql, postgres, sqlserver, sqlite3
  #   # mysql
  #   username: "gorm"
  #   password: "gorm"
  #   hostName: "127.0.0.1:3306" # hostname:port OR path
  #   dbName: "a_d3ta_logs"
  #   config: "charset=utf8&parseTime=True&loc=Local"
  #   maxIdleConns: 10
  #   maxOpenConns: 10
  #   logMode: true # shoud be "false" on production
  emailDB:
    connectionName: "db-email"
    driver: "mysql" # mysql, postgres, sqlserver, sqlite3
    # mysql
    username: "gorm"
    password: "gorm"
    hostName: "127.0.0.1:3306" # hostname:port OR path
    dbName: "koreserve"
    config: "charset=utf8&parseTime=True&loc=Local"
    maxIdleConns: 10
    maxOpenConns: 10
    logMode: true # shoud be "false" on production

# IAM
IAM:
  defaultAdmin:
    username: "admin.koreserve"
    password: "koreserve"
    nickName: "super admin"
    email: "koreserve.acornsoft@gmail.com"
    authorityID: "group:admin"
  registration:
    activationURL: "http://%s/api/v1/auths/registration/activate"
    defaultAuthorityID: "group:default"
  JWT:
    issuer: "KORESERVE"
    signingKey: "KORESERVE-SigningKey"
  casbin:
    modelPath: "casbin/casbin_rbac_rest_model.conf"
    enforcers:
      defaultEnforcerID: "default-casbin-enforcer"
      systemEnforcerID: "system-casbin-enforcer"

# securities
# securities:
#   captcha:
#     keyLong: 4
#     imgWidth: 120
#     imgHeight: 40
#     imgUrl: "http://%s/system/captcha/image/%s.png"

# Directory Locations
dirLocations:
  conf: "./conf"
  www: "./www"
  temp: "./temp"
  log: "./logs"
  cache: "./caches"
  modelPackageFileRootPath: "koreserve-modelpackage"
  modelPath: "/model"
  trainingDatasetPath: "/training-dataset"
  holdoutDatasetPath: "/holdout-dataset"
  monitoringFileRootPath: "koreserve-monitoring"
  actualDataPath: "/actual-data"

connectors:
  storages:
    minio:
      endpoint: "192.168.88.151:30009"
      accessKeyID: "minioadmin"
      secretAccessKey: "minioadmin"
      useSSL: false
  driftServer:
    endpoint: "http://192.168.88.151:30071"
  accuracyServer:
    endpoint: "http://192.168.88.151:30072"
  serviceHealthServer:
    endpoint: "http://192.168.88.151:30073"
  graphServer:
    endpoint: "http://192.168.88.151:30074"
  kafka:
    endpoint: "192.168.88.151:32038"
    groupID: "monitor-group"
    autoOffsetReset: "latest"




# SMTP Servers
SMTPServers:
  defaultSMTP:
    server: "smtp.gmail.com"
    port: "587"
    username: "koreserve.acornsoft@gmail.com"
    password: "coqaxngvrbrhzset"
    senderEmail: "koreserve.acornsoft@gmail.com"
    senderName: "KoreServe NoReply"

# Caches
caches:
  # Cache with Redis engine Sample
  sessionCache:
    connectionName: "session-cache"
    engine: "redis"
    driver: "redis"
    configurations: # Following redis engine
      network: "tcp"
      host: "127.0.0.1"
      port: "6379"
      username: ""
      password: ""
      db: 1
      maxRetries: 3
      poolSize: 10
      minIdleConns: 5
  # Cache with GoMacaron/Cache engine Sample
  # tmpDataCache:
  #   connectionName: "tmp-data-cache"
  #   engine: "gomacaron"
  #   driver: "redis"
  #   configurations: # Following GoMacaron/Cache engine
  #     adapter: "redis"
  #     adapterConfig: "addr:127.0.0.1:6379"
  #     interval: 60
  #     occupyMode: false
  #     section: "cache"

